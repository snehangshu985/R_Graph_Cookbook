ggplot(my_data, aes(trials, prop)) + geom_line()
x <- c(0,1)
y <- sample(x, 10, replace = T)
trial <- 1000
m <- matrix( nrow = index, ncol = 2)
for(i in 1:trial){
m[i,1] <- i;
y <- y <- sample(x, i, replace = T)
m[i,2] <- sum(y)
}
my_data <- as.data.frame(m)
my_data$prop <- my_data$V2/my_data$V1
names(my_data) <- c("trials", "heads", "prop")
library(ggplot2)
ggplot(my_data, aes(trials, prop)) + geom_line()
ggplot(my_data, aes(trials, prop)) + geom_line() +
coord_cartesian(ylim = c(0,1))
x <- c(0,1)
y <- sample(x, 10, replace = T)
trial <- 1000
m <- matrix( nrow = index, ncol = 2)
for(i in 1:trial){
m[i,1] <- i;
y <- y <- sample(x, i, replace = T)
m[i,2] <- sum(y)
}
my_data <- as.data.frame(m)
my_data$prop <- my_data$V2/my_data$V1
names(my_data) <- c("trials", "heads", "prop")
library(ggplot2)
ggplot(my_data, aes(trials, prop)) + geom_line() +
coord_cartesian(ylim = c(0,1))
x <- c(0,1)
y <- sample(x, 10, replace = T)
trial <- 1000
m <- matrix( nrow = index, ncol = 2)
for(i in 1:trial){
m[i,1] <- i;
y <- y <- sample(x, i, replace = T)
m[i,2] <- sum(y)
}
my_data <- as.data.frame(m)
my_data$prop <- my_data$V2/my_data$V1
names(my_data) <- c("trials", "heads", "prop")
library(ggplot2)
ggplot(my_data, aes(trials, prop)) + geom_line() +
coord_cartesian(ylim = c(0,1))
x <- c(0,1)
y <- sample(x, 10, replace = T)
trial <- 1000
m <- matrix( nrow = index, ncol = 2)
for(i in 1:trial){
m[i,1] <- i;
y <- y <- sample(x, i, replace = T)
m[i,2] <- sum(y)
}
my_data <- as.data.frame(m)
my_data$prop <- my_data$V2/my_data$V1
names(my_data) <- c("trials", "heads", "prop")
library(ggplot2)
ggplot(my_data, aes(trials, prop)) + geom_line() +
coord_cartesian(ylim = c(0,1))
x <- c(0,1)
y <- sample(x, 10, replace = T)
trial <- 1000
m <- matrix( nrow = index, ncol = 2)
for(i in 1:trial){
m[i,1] <- i;
y <- y <- sample(x, i, replace = T)
m[i,2] <- sum(y)
}
my_data <- as.data.frame(m)
my_data$prop <- my_data$V2/my_data$V1
names(my_data) <- c("trials", "heads", "prop")
library(ggplot2)
ggplot(my_data, aes(trials, prop)) + geom_line() +
coord_cartesian(ylim = c(0,1))
tail(my_data, 20)
x <- c(0,1)
y <- sample(x, 10, replace = T)
trial <- 1000
m <- matrix( nrow = index, ncol = 2)
for(i in 1:trial){
m[i,1] <- i;
y <- y <- sample(x, i, replace = T)
m[i,2] <- sum(y)
}
my_data <- as.data.frame(m)
my_data$prop <- my_data$V2/my_data$V1
names(my_data) <- c("trials", "heads", "prop")
tail(my_data, 20)
x <- c(0,1)
y <- sample(x, 10, replace = T)
trial <- 1000
m <- matrix( nrow = trial, ncol = 2)
for(i in 1:trial){
m[i,1] <- i;
y <- y <- sample(x, i, replace = T)
m[i,2] <- sum(y)
}
my_data <- as.data.frame(m)
my_data$prop <- my_data$V2/my_data$V1
names(my_data) <- c("trials", "heads", "prop")
tail(my_data, 20)
library(ggplot2)
ggplot(my_data, aes(trials, prop)) + geom_line() +
coord_cartesian(ylim = c(0,1))
attach(my_data)
y <- sample(x, 10, replace = T, prob = c(.1,.9))
detach(my_data)
x <- c(0,1)
# y <- sample(x, 10, replace = T, prob = c(.1,.9))
trial <- 1000
m <- matrix( nrow = trial, ncol = 2)
for(i in 1:trial){
m[i,1] <- i;
y <- y <- sample(x, i, replace = T)
m[i,2] <- sum(y)
}
my_data <- as.data.frame(m)
my_data$prop <- my_data$V2/my_data$V1
names(my_data) <- c("trials", "heads", "prop")
library(ggplot2)
ggplot(my_data, aes(trials, prop)) + geom_line() +
coord_cartesian(ylim = c(0,1))
x <- c(0,1)
# y <- sample(x, 10, replace = T, prob = c(.1,.9))
trial <- 1000
m <- matrix( nrow = trial, ncol = 2)
for(i in 1:trial){
m[i,1] <- i;
y <- y <- sample(x, i, replace = T, prob = c(.1,.9))
m[i,2] <- sum(y)
}
my_data <- as.data.frame(m)
my_data$prop <- my_data$V2/my_data$V1
names(my_data) <- c("trials", "heads", "prop")
library(ggplot2)
ggplot(my_data, aes(trials, prop)) + geom_line() +
coord_cartesian(ylim = c(0,1))
x <- c(0,1)
# y <- sample(x, 10, replace = T, prob = c(.1,.9))
trial <- 1000
m <- matrix( nrow = trial, ncol = 2)
for(i in 1:trial){
m[i,1] <- i;
y <- y <- sample(x, i, replace = T, prob = c(.1,.9))
m[i,2] <- sum(y)
}
my_data <- as.data.frame(m)
my_data$prop <- my_data$V2/my_data$V1
names(my_data) <- c("trials", "heads", "prop")
library(ggplot2)
ggplot(my_data, aes(trials, prop)) + geom_line() +
coord_cartesian(ylim = c(0,1))
x <- c(0,1)
# y <- sample(x, 10, replace = T, prob = c(.1,.9))
trial <- 1000
m <- matrix( nrow = trial, ncol = 2)
for(i in 1:trial){
m[i,1] <- i;
y <- y <- sample(x, i, replace = T, prob = c(.1,.9))
m[i,2] <- sum(y)
}
my_data <- as.data.frame(m)
my_data$prop <- my_data$V2/my_data$V1
names(my_data) <- c("trials", "heads", "prop")
library(ggplot2)
ggplot(my_data, aes(trials, prop)) + geom_line() +
coord_cartesian(ylim = c(0,1))
x <- c(0,1)
# y <- sample(x, 10, replace = T, prob = c(.1,.9))
trial <- 1000
m <- matrix( nrow = trial, ncol = 2)
for(i in 1:trial){
m[i,1] <- i;
y <- y <- sample(x, i, replace = T, prob = c(.1,.9))
m[i,2] <- sum(y)
}
my_data <- as.data.frame(m)
my_data$prop <- my_data$V2/my_data$V1
names(my_data) <- c("trials", "heads", "prop")
library(ggplot2)
ggplot(my_data, aes(trials, prop)) + geom_line() +
coord_cartesian(ylim = c(0,1))
x <- c(0,1)
# y <- sample(x, 10, replace = T, prob = c(.1,.9))
trial <- 1000
m <- matrix( nrow = trial, ncol = 2)
for(i in 1:trial){
m[i,1] <- i;
y <- y <- sample(x, i, replace = T, prob = c(.1,.7))
m[i,2] <- sum(y)
}
my_data <- as.data.frame(m)
my_data$prop <- my_data$V2/my_data$V1
names(my_data) <- c("trials", "heads", "prop")
library(ggplot2)
ggplot(my_data, aes(trials, prop)) + geom_line() +
coord_cartesian(ylim = c(0,1))
x <- c(0,1)
# y <- sample(x, 10, replace = T, prob = c(.1,.9))
trial <- 1000
m <- matrix( nrow = trial, ncol = 2)
for(i in 1:trial){
m[i,1] <- i;
y <- y <- sample(x, i, replace = T, prob = c(.1,.7))
m[i,2] <- sum(y)
}
my_data <- as.data.frame(m)
my_data$prop <- my_data$V2/my_data$V1
names(my_data) <- c("trials", "heads", "prop")
library(ggplot2)
ggplot(my_data, aes(trials, prop)) + geom_line() +
coord_cartesian(ylim = c(0,1))
x <- c(0,1)
# y <- sample(x, 10, replace = T, prob = c(.1,.9))
trial <- 1000
m <- matrix( nrow = trial, ncol = 2)
for(i in 1:trial){
m[i,1] <- i;
y <- y <- sample(x, i, replace = T, prob = c(.3,.7))
m[i,2] <- sum(y)
}
my_data <- as.data.frame(m)
my_data$prop <- my_data$V2/my_data$V1
names(my_data) <- c("trials", "heads", "prop")
library(ggplot2)
ggplot(my_data, aes(trials, prop)) + geom_line() +
coord_cartesian(ylim = c(0,1))
x <- c(0,1)
# y <- sample(x, 10, replace = T, prob = c(.1,.9))
trial <- 1000
m <- matrix( nrow = trial, ncol = 2)
for(i in 1:trial){
m[i,1] <- i;
y <- y <- sample(x, i, replace = T, prob = c(.3,.7))
m[i,2] <- sum(y)
}
my_data <- as.data.frame(m)
my_data$prop <- my_data$V2/my_data$V1
names(my_data) <- c("trials", "heads", "prop")
library(ggplot2)
ggplot(my_data, aes(trials, prop)) + geom_line() +
coord_cartesian(ylim = c(0,1))
x <- c(0,1)
# y <- sample(x, 10, replace = T, prob = c(.1,.9))
trial <- 1000
m <- matrix( nrow = trial, ncol = 2)
for(i in 1:trial){
m[i,1] <- i;
y <- y <- sample(x, i, replace = T, prob = c(.3,.7))
m[i,2] <- sum(y)
}
my_data <- as.data.frame(m)
my_data$prop <- my_data$V2/my_data$V1
names(my_data) <- c("trials", "heads", "prop")
library(ggplot2)
ggplot(my_data, aes(trials, prop)) + geom_line() +
coord_cartesian(ylim = c(0,1))
x <- c(0,1)
# y <- sample(x, 10, replace = T, prob = c(.1,.9))
trial <- 1000
m <- matrix( nrow = trial, ncol = 2)
for(i in 1:trial){
m[i,1] <- i;
y <- y <- sample(x, i, replace = T, prob = c(.3,.7))
m[i,2] <- sum(y)
}
my_data <- as.data.frame(m)
my_data$prop <- my_data$V2/my_data$V1
names(my_data) <- c("trials", "heads", "prop")
library(ggplot2)
ggplot(my_data, aes(trials, prop)) + geom_line() +
coord_cartesian(ylim = c(0,1))
x <- c(0,1)
# y <- sample(x, 10, replace = T, prob = c(.1,.9))
trial <- 1000
m <- matrix( nrow = trial, ncol = 2)
for(i in 1:trial){
m[i,1] <- i;
y <- y <- sample(x, i, replace = T, prob = c(.3,.7))
m[i,2] <- sum(y)
}
my_data <- as.data.frame(m)
my_data$prop <- my_data$V2/my_data$V1
names(my_data) <- c("trials", "heads", "prop")
library(ggplot2)
ggplot(my_data, aes(trials, prop)) + geom_line() +
coord_cartesian(ylim = c(0,1))
x <- c(0,1)
# y <- sample(x, 10, replace = T, prob = c(.1,.9))
trial <- 1000
m <- matrix( nrow = trial, ncol = 2)
for(i in 1:trial){
m[i,1] <- i;
y <- y <- sample(x, i, replace = T, prob = c(.3,.7))
m[i,2] <- sum(y)
}
my_data <- as.data.frame(m)
my_data$prop <- my_data$V2/my_data$V1
names(my_data) <- c("trials", "heads", "prop")
library(ggplot2)
ggplot(my_data, aes(trials, prop)) + geom_line() +
coord_cartesian(ylim = c(0,1))
x <- 1:6
trial <- 10000
m <- matrix(nrow = trial, ncol = 2)
x <- 1:6
trial <- 10000
m <- matrix(nrow = trial, ncol = 2)
for (i in 1:trial){
m[i,1] <- i;
y <- sample(x, i, replace = T)
m[i,2] <- mean(y)
}
library(ggplot2)
df <- as.data.frame(m)
head(df)
names(df) <- c("trials", "mean")
head(df)
names(df) <- c("trials", "average")
names(df) <- c("trials", "average")
head(df)
ggplot(df, aes(trials, average)) + geom_line()
x <- 1:6
trial <- 1000
m <- matrix(nrow = trial, ncol = 2)
for (i in 1:trial){
m[i,1] <- i;
y <- sample(x, i, replace = T)
m[i,2] <- mean(y)
}
library(ggplot2)
df <- as.data.frame(m)
names(df) <- c("trials", "average")
ggplot(df, aes(trials, average)) + geom_line()
x <- 1:6
trial <- 1000
m <- matrix(nrow = trial, ncol = 2)
for (i in 1:trial){
m[i,1] <- i;
y <- sample(x, i, replace = T)
m[i,2] <- mean(y)
}
library(ggplot2)
df <- as.data.frame(m)
names(df) <- c("trials", "average")
ggplot(df, aes(trials, average)) + geom_line() +
coord_cartesian(ylim = c(1,6))
x <- 1:6
trial <- 1000
m <- matrix(nrow = trial, ncol = 2)
for (i in 1:trial){
m[i,1] <- i;
y <- sample(x, i, replace = T)
m[i,2] <- mean(y)
}
library(ggplot2)
df <- as.data.frame(m)
names(df) <- c("trials", "average")
ggplot(df, aes(trials, average)) + geom_line() +
coord_cartesian(ylim = c(1,6))
x <- 1:6
trial <- 1000
m <- matrix(nrow = trial, ncol = 2)
for (i in 1:trial){
m[i,1] <- i;
y <- sample(x, i, replace = T)
m[i,2] <- mean(y)
}
library(ggplot2)
df <- as.data.frame(m)
names(df) <- c("trials", "average")
ggplot(df, aes(trials, average)) + geom_line() +
coord_cartesian(ylim = c(1,6))
x <- 1:6
trial <- 1000
m <- matrix(nrow = trial, ncol = 2)
for (i in 1:trial){
m[i,1] <- i;
y <- sample(x, i, replace = T)
m[i,2] <- mean(y)
}
library(ggplot2)
df <- as.data.frame(m)
names(df) <- c("trials", "average")
ggplot(df, aes(trials, average)) + geom_line() +
coord_cartesian(ylim = c(1,6))
x <- 1:6
trial <- 100
m <- matrix(nrow = trial, ncol = 2)
for (i in 1:trial){
m[i,1] <- i;
y <- sample(x, i, replace = T)
m[i,2] <- mean(y)
}
library(ggplot2)
df <- as.data.frame(m)
names(df) <- c("trials", "average")
ggplot(df, aes(trials, average)) + geom_line() +
coord_cartesian(ylim = c(1,6))
x <- 1:6
trial <- 500
m <- matrix(nrow = trial, ncol = 2)
for (i in 1:trial){
m[i,1] <- i;
y <- sample(x, i, replace = T)
m[i,2] <- mean(y)
}
library(ggplot2)
df <- as.data.frame(m)
names(df) <- c("trials", "average")
ggplot(df, aes(trials, average)) + geom_line() +
coord_cartesian(ylim = c(1,6))
setwd("F:/R_Graph_Cookbook/legends")
#===============================================================================
#                               Chapter 9 -- LEGENDS
#===============================================================================
# @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
library(ggplot2)
library(dplyr)
library(tidyr)
library(gcookbook)
#===============================================================================
# 10.1 Removing the Legend
#===============================================================================
# use guides(), and specify the scale that should have its legend removed
# Create the base plot (with legend)
pg_plot <- ggplot(PlantGrowth, aes(x = group, y = weight, fill = group)) +
geom_boxplot()
# Remove the legend for fill using guide() function
pg_plot +
guides(fill = FALSE)
#===============================================================================
# 10.2 Changing the Position of a Legend
#===============================================================================
# use theme(legend.position = ...) to place legends
pg_plot <- ggplot(PlantGrowth, aes(x = group, y = weight, fill = group)) +
geom_boxplot()
# palcing legends at top
pg_plot + theme(legend.position = "top")
# placing legends at any position
pg_plot +
theme(legend.position = c(.85, .2))
# removing back ground of legends
pg_plot +
theme(legend.position = c(.85, .2)) +
theme(legend.background = element_blank())
#===============================================================================
# 10.3 Changing the Order of Items in a Legend
#===============================================================================
# Create the base plot
pg_plot <- ggplot(PlantGrowth, aes(x = group, y = weight, fill = group)) +
geom_boxplot()
# Change the order of items
pg_plot +
scale_fill_discrete(limits = c("trt1", "trt2", "ctrl"))
#===============================================================================
# 10.4 Reversing the Order of Items in a Legend
#===============================================================================
# Add guides (fill = guide_legend(reverse = TRUE)) ...
# to reverse the order of the legend
# Create the base plot
pg_plot <- ggplot(PlantGrowth, aes(x = group, y = weight, fill = group)) +
geom_boxplot()
pg_plot + guides(fill = guide_legend(reverse = TRUE))
#===============================================================================
# 10.5 Changing a Legend Title
#===============================================================================
# Use labs() and set the value of fill, colour etc ....
# Create the base plot
pg_plot <- ggplot(PlantGrowth, aes(x = group, y = weight, fill = group)) +
geom_boxplot()
# Set the legend title to "Condition"
pg_plot + labs(fill = "Conditions") +
scale_x_discrete(labels = c("Control", "TRT1", "TRT2"))
# another example in cotinuous X axis
# Load gcookbook for the heightweight data set
hw_plot <- ggplot(heightweight,
aes(x = ageYear, y = heightIn, colour = sex)) +
geom_point(aes(size = weightLb), alpha = 0.75)
hw_plot + xlab("Age in Year") +
ylab("Height in Inches") +
labs(colour = "Gender",
size = "Weight \n(Pound)") +
theme(axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face= "bold")) +
geom_smooth(method = "lm", se =F) +
theme_light()
#basic bloxlot
pg_plot <- ggplot(PlantGrowth, aes(x = group, y = weight, fill = group)) +
geom_boxplot()
pg_plot
pg_plot +
theme(legend.title = element_text(
face = "italic",
family = "Times",
colour = "red",
size = 14)
)
pg_plot +
theme(legend.title = element_text(
face = "italic",
colour = "red",
size = 14)
)
pg_plot +
theme(legend.title = element_blank())
ggplot(PlantGrowth, aes(x = group, y = weight, fill = group)) +
geom_boxplot() +
guides(fill = guide_legend(title = NULL))
