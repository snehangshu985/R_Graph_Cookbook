df <- df %>%
separate(Student, into = c("Firstname", "Lastname") ,sep = " ") %>%
arrange(Lastname, Firstname)
df <- df %>% mutate(score = (scale(Math) + scale(Science) + scale(English))/3)
score_breaks <- quantile(df$score, probs = c(.2,.4,.6,.8))
score_breaks <- c(-Inf, score_breaks, +Inf)
grade <- cut(df$score, breaks = score_breaks,
labels = c("F", "D", "C", "B", "A"))
df$grade <- grade
df
mystats <- function(x, parametric=TRUE, print=FALSE) {
if (parametric) {
center <- mean(x); spread <- sd(x)
} else {
center <- median(x); spread <- mad(x)
}
if (print & parametric) {
cat("Mean=", center, "\n", "SD=", spread, "\n")
} else if (print & !parametric) {
cat("Median=", center, "\n", "MAD=", spread, "\n")
}
result <- list(center=center, spread=spread)
return(result)
}
set.seed(1234)
x <- rnorm(500)
mystats <- function(x, parametric=TRUE, print=FALSE) {
if (parametric) {
center <- mean(x); spread <- sd(x)
} else {
center <- median(x); spread <- mad(x)
}
if (print & parametric) {
cat("Mean=", center, "\n", "SD=", spread, "\n")
} else if (print & !parametric) {
cat("Median=", center, "\n", "MAD=", spread, "\n")
}
result <- list(center=center, spread=spread)
return(result)
}
set.seed(1234)
x <- rnorm(500)
y <- mystats(x)
y
y <- mystats(x, F, T)
y
1*(1+.25)^4
x <- 1000
y <- (1 + 1/x)^x
y <- (1 + 1/x)^x
x <- 1:1000
y <- (1 + 1/x)^x
plot(x,y)
library(ggplot2)
df <- data.frame(x=x, y=y)
g1 <- ggplot(df, aes(x,y)) + geom_line()
g1
g1 <- coord_cartesian(xlim = c(1,100))
g1
g1 <- coord_cartesian(xlim = c(1,100))
g1
g1 <- g1 + coord_cartesian(xlim = c(1,100))
g1
g1 <- ggplot(df, aes(x,y)) + geom_line()
g1 <- g1 + coord_cartesian(xlim = c(1,100))
g1
pf(15.36,5,65)
pf(15.36,5,65, lower.tail = F)
df <- iris
str(df)
table(df$Species)
table(df$Petal.Length,df$Species)
df <- mtcars
str(df)
df$am <- as.factor(df$am)
df$am <- as.factor(df$am)
df$gear <- as.factor(df$gear)
table(df$am, df$gear)
table(df$gear, df$am)
mytable <- table(df$gear, df$am)
is.matrix(mytable)
addmargins(mytable)
myproptab <- prop.table(df$gear, df$am)
mytable <- addmargins(mytable)
myproptab <- prop.table(mytable)
myproptab
mytable <- table(df$gear, df$am)
myproptab <- prop.table(mytable)
myproptab
myproptab <- prop.table(df$gear, df$am)
mytable <- table(df$gear, df$am)
mytable
mytable <- addmargins(mytable)
mytable
myproptab <- prop.table(mytable[1:3,1:2])
myproptab
myproptab <- addmargins(myproptab)
myproptab
round(myproptab,2)
mytable
mytable <- table(df$gear, df$am)
mytable
colnames(mytable) <- c("Auto", "Manual")
rownames(mytable) <- c("Three", "Four", "Five")
mytable
chisq.test(mytable)
library(vcd)
mytable <- xtabs(~Treatment+Improved, data=Arthritis)
mytable
chisq.test(mytable)
mytable <- table(Arthritis$Treatment, Arthritis$Improved)
mytable
mytable <- xtabs(~Treatment+Improved, data=Arthritis)
mytable2 <- table(Arthritis$Treatment, Arthritis$Improved)
mytable
mytable2
chisq.test(mytable)
chisq.test(mytable2)
df <- mtcars
mytable <- table(df$gear, df$am)
colnames(mytable) <- c("Auto", "Manual")
rownames(mytable) <- c("Three", "Four", "Five")
chisq.test(mytable)
install.packages("gtools")
combn(4,2)
choose(4,2)
library(gtools)
combinations(4,2)
mynames <- letters
mynames <- LETTERS
mynames <- LETTERS[1:4]
combinations(mynames,mynum)
combinations(mynames,2)
Marx.Bros <- c("Groucho","Chico","Harpo","Zeppo")
combinations(4,2,v=Marx.Bros)
combinations(5,2,v=Marx.Bros)
combinations(3,2,v=Marx.Bros)
combinations(2,2,v=Marx.Bros)
successes <- seq(0,10)
dbinom(1,10,prob = 1/6)
choose(10,1) * (1/6)* (5/6)^9
x <- dbinom(0:10,10,prob = 1/6)
sum(x)
y <- pbinom(10,10, prob = 1/6)
y
x <- dbinom(0:9,10,prob = 1/6)
sum(x)
x <- dbinom(0:9,10,prob = 1/6)
sum(x)
x <- 0:9
x <- dbinom(0:9,10,prob = 1/6)
sum(x)
x <- 0:10
x <- dbinom(0:9,10,prob = 1/6)
sum(x)
x <- 0:10
x <- dbinom(x,10,prob = 1/6)
sum(x)
x <- 0:9
x <- dbinom(x,10,prob = 1/6)
sum(x)
x <- 0:8
x <- dbinom(x,10,prob = 1/6)
sum(x)
x <- 0:9
x <- dbinom(x,10,prob = 1/10)
sum(x)
x <- 0:7
x <- dbinom(x,10,prob = 1/10)
sum(x)
y <- pbinom(7,10, prob = 1/10)
y
x <- 0:5
x <- dbinom(x,10,prob = 1/10)
sum(x)
y <- pbinom(5,10, prob = 1/10)
y
x <- 0:10
x <- dbinom(x,10,prob = 1/10)
sum(x)
x
data.frame(x, cumsum(x))
x <- 0:10
y <- dbinom(x,10,prob = 1/10)
sum(y)
data.frame(x, y, cumsum(y))
data.frame(success, Prob = myprob, CumProb = cumsum(y))
data.frame(Success = success, Prob = myprob, CumProb = cumsum(y))
success <- 0:10
myprob <- dbinom(x,10,prob = 1/10)
data.frame(Success = success, Prob = myprob, CumProb = cumsum(y))
df <- data.frame(Success = success, Prob = myprob, CumProb = cumsum(y))
library(ggplot2)
ggplot(df, aes(Success, Prob)) + geom_bar()
ggplot(df, aes(Success, Prob)) + geom_bar(stat = "identity")
ggplot(df, aes(Success, Prob)) + geom_col()
ggplot(df, aes(Success, Prob)) + geom_col(fill="white", color = "blue")
ggplot(df, aes(Success, Prob)) + geom_col(fill="white", color = "blue") +
theme_minimal()
ggplot(df, aes(Success, Prob)) +
geom_col(fill="white", aes(color = factor(Success))) +
theme_minimal()
ggplot(df, aes(Success, Prob)) +
geom_col(fill="white", aes(color = factor(Success)), show.legend = F) +
theme_minimal()
success <- 0:10
myprob <- dbinom(x,10,prob = 1/2)
df <- data.frame(Success = success, Prob = myprob, CumProb = cumsum(y))
ggplot(df, aes(Success, Prob)) +
geom_col(fill="white", aes(color = factor(Success)), show.legend = F) +
theme_minimal()
ggplot(df, aes(Success, Prob)) +
geom_col(fill="white", aes(color = factor(Success)), show.legend = F, size=2) +
theme_minimal()
ggplot(df, aes(Success, Prob)) +
geom_col(fill="white", aes(color = factor(Success)), show.legend = F, size=1.2) +
theme_minimal()
ggplot(df, aes(Success, Prob)) +
geom_col(fill="white", aes(color = factor(Success)), show.legend = F, size=1) +
theme_minimal()
success <- 0:10
myprob <- dbinom(x,10,prob = 1/2)
df <- data.frame(Success = success, Prob = myprob, CumProb = cumsum(y))
ggplot(df, aes(Success, Prob)) +
geom_col(fill="white", aes(color = factor(Success)), show.legend = F, size=1) +
theme_minimal()
success <- 0:10
myprob <- dbinom(x,10,prob = 9/10)
df <- data.frame(Success = success, Prob = myprob, CumProb = cumsum(y))
ggplot(df, aes(Success, Prob)) +
geom_col(fill="white", aes(color = factor(Success)), show.legend = F, size=1) +
theme_minimal()
?geom_text
ggplot(df, aes(Success, Prob)) +
geom_col(fill="white", aes(color = factor(Success)), show.legend = F, size=1) +
geom_label() + theme_minimal()
df
ggplot(df, aes(Success, Prob)) +
geom_col(fill="white", aes(color = factor(Success)), show.legend = F, size=1) +
geom_text(aes(label = Prob)) + theme_minimal()
ggplot(df, aes(Success, Prob)) +
geom_col(fill="white", aes(color = factor(Success)), show.legend = F, size=1) +
geom_text(aes(label = round(Prob,2))) + theme_minimal()
ggplot(df, aes(Success, Prob)) +
geom_col(fill="white", aes(color = factor(Success)), show.legend = F, size=1) +
geom_text(aes(label = round(Prob,3))) + theme_minimal()
ggplot(df, aes(Success, Prob)) +
geom_col(fill="white", aes(color = factor(Success)), show.legend = F, size=1) +
geom_text(aes(label = round(Prob,3)), nudge_y = 0.02) + theme_minimal()
x <- 1:100
mad(x)
abs(x- mean(x))
sum(abs(x- mean(x)))
mad(x)
median(1:100)
mad(x, constant = 1)
x <- c(5, 13, 83, 78, 38, 60, 26, 95, 97, 95)
x
mad(x, constant = 1)
x <- c(5, 13, 83, 78, 38, 60, 26, 95, 97, 95)
mad(x, center =median(x), constant = 1)
median(x)
x <- c(5, 13, 83, 78, 38, 60, 26, 95, 97, 95)
x
mad(x, center =median(x), constant = 1)
library(swirl)
swirl()
head(flags)
df <- iris
cols <- character(nrow(df)
)
cols[] <- "black"
cols[df$Species == "virginica"] <- "red"
unique(df$Species)
cols[] <- "black"
cols[df$Species == "setosa"] <- "red"
cols[df$Species == "versicolor"] <- "green"
cols[df$Species == "virginica"] <- "blue"
cols <- character(nrow(df))
cols[df$Species == "setosa"] <- "red"
cols[df$Species == "versicolor"] <- "green"
cols[df$Species == "virginica"] <- "blue"
pairs(df, col = cols)
x <- rnorm(10000)
hist(x)
y1 <- sample(x,15)
hist(y1)
y2 <- sample(y1, 500, replace = T)
hist(y2)
y3 <- numeric()
for i in 1:500{
t <- sample(y1, 500, replace= T)
y3[i] <- mean(t)
}
for (i in 1:500){
t <- sample(y1, 500, replace= T)
y3[i] <- mean(t)
}
hist(y3)
mean(y3)
mean(x)
x <- runif(10000)
y1 <- sample(x,15)
y2 <- sample(y1, 500, replace = T)
y3 <- numeric()
for (i in 1:500){
t <- sample(y1, 500, replace= T)
y3[i] <- mean(t)
}
hist(x)
hist(y1)
hist(y2)
hist(y3)
y3 <- 1:500
for (i in 1:500){
t <- sample(y1, 500, replace= T)
y3 <-  rbind(y3,t)
}
dim(y3)
y3[1,:]
y3[1,1]
y3[1,2]
y3[1,]
y3 <- y3[-1,]
y3[1,1]
y3[1,2]
y3 <- colMeans(y3)
hist(y3)
hist(x)
library(ISLR2)
x <- model.matrix(Salary âˆ¼ ., Hitters)[, -1]
A <- 1:10
A[4] <- NA
sum(A)
sum(A, na.rm = T)
seq(1,10)
rep(1,10)
rep(c(1,2),10)
rep(c(1,2), each=10)
seq(1,10,2)
df <- chickwts
head(df)
unique(df$feed)
str(df)
names(df)
boxplot(df$feed)
attach(df)
boxplot(feed~ weight)
boxplot(feed, weight)
boxplot(weight~feed)
xlab(unique(feed))
xlabs(unique(feed))
boxplot(weight~feed, xlabs = unique(feed))
split(df, df$feed)
mydata <- split(df, df$feed)
names(mydata)
mydata$casein
index <- names(mydata)
for(i in index){
print(i)
}
for(i in index){
mydata[[i]]
}
for(i in 1:length(index){
print(i)
}
for(i in 1:length(index)){
print(i)
}
for(i in 1:length(index)){
print(i)
print(index[i])
}
unlist(mydata)
View(mydata)
index
casein <- mydata[[1]]
casein
library(readr)
library(readxl)
library(dplyr)
head(morley)
str(morley)
?morley
pair(morley)
pairs(morley)
summary(morley)
fit_lm <- lm(speed ~ ., data = morley)
fit_lm <- lm(Speed ~ ., data = morley)
summary(fit_lm)
a <- morley %>% filter(Expt == 1) %>% summary()
a
ggplot(pressure, aes(x = temperature, y = pressure)) +
geom_line() +
geom_point()
library(ggplot2)
ggplot(pressure, aes(x = temperature, y = pressure)) +
geom_line() +
geom_point()
ggplot(pressure, aes(x = temperature, y = pressure)) +
geom_line(color = "blue", size =.7) +
geom_point(color = "red", size=3)
ggplot(pressure, aes(x = temperature, y = pressure)) +
geom_line(color = "blue", size =.7) +
geom_point(color = "red", size=3) +
xlab("Temperature") +
ylab("Pressure") +
ggtitle("Line Graph")
data=data.frame(rollno = c(1, 5, 4, 2, 3),
names = c("sravan", "bobby",
"pinkey", "rohith",
"gnanesh"),
subjects = c("java", "python",
"php", "sql", "c"))
data
library(dplyr)
data %>% arrange(rollno)
data %>% arrange(desc(rollno))
data %>% select(-subjects)
data %>% mutate(paste(names, subjects))
data %>% mutate(newcol = paste(names, subjects))
library(dplyr)
library(ggplot2)
library(tidyr)
library(nycflights13)
df <- as.data.frame(flights)
names(df)
df %>% select(year, month, day, contains("time"))
df2 <- df %>% select(year, month, day, contains("time"))
names(df2)
x <- runif(1, 0, 10)
plot(density(x))
hist(x)
if (x>3){
y <- 10
} else {
y <- 0
}
y <- double()
x <- rnorm(10,5,1)
if (x>5) {
y <- "Greater than 5"
} else {
y <- "Less than 5"
}
for (i in 1:length(x)) {
if (x[i]>5) {
y[i] <- "Greater than 5"
} else {
y[i] <- "Less than 5"
}
}
df <- data.frame(X = x, Y = y)
df
setwd("F:/R_Graph_Cookbook/scatter_plot")
setwd("F:/R_Graph_Cookbook/summary_plot")
library(dplyr)
library(tidyr)
library(ggplot2)
library(gcookbook)
ggplot(faithful, aes(x = waiting)) +
geom_histogram()
waiting <- vfaithful$waiting
waiting <- faithful$waiting
typeof(waiting)
class(waiting)
str(waiting)
ggplot(data = NULL, aes(x=waiting)) + geom_histogram()
ggplot(faithful, aes(x = waiting)) +
geom_histogram(bins = 15)
ggplot(faithful, aes(x = waiting)) +
geom_histogram(binwidth = 5)
head(faithful)
ggplot(faithful, aes(waiting, eruptions)) + geom_point()
ggplot(faithful, aes(waiting, eruptions)) + geom_point() + geom_rug(position = "jitter")
library(MASS) # Load MASS for the birthwt data set
# Use smoke as the faceting variable
ggplot(birthwt, aes(x = bwt)) +
geom_histogram(fill = "white", colour = "black") +
facet_grid(smoke ~ .)
ggplot(birthwt, aes(x = bwt)) +
geom_histogram(fill = "white", colour = "black") +
facet_grid(. ~ smoke)
ggplot(birthwt, aes(x = bwt)) +
geom_histogram(fill = "white", colour = "black") +
facet_grid(smoke ~ .)
ggplot(birthwt, aes(x = bwt)) +
geom_histogram(fill = "white", colour = "black") +
facet_grid(. ~ smoke)
ggplot(birthwt, aes(x = bwt)) +
geom_histogram(fill = "white", colour = "black") +
facet_grid(smoke ~ .)
ggplot(birthwt, aes(x = bwt)) +
geom_histogram(fill = "white", colour = "black") +
facet_grid(. ~ smoke) # column wise . ~ smoke
head(birthwt)
ggplot(birthwt_mod, aes(x = bwt, fill = smoke)) +
geom_histogram(position = "identity", alpha = 0.4)
birthwt_mod <- birthwt
# Convert smoke to a factor and reassign new names
birthwt_mod$smoke <- recode_factor(birthwt_mod$smoke, '0' = 'No Smoke', '1' = 'Smoke')
ggplot(birthwt_mod, aes(x = bwt, fill = smoke)) +
geom_histogram(position = "identity", alpha = 0.4)
ggplot(birthwt_mod, aes(x = bwt, fill = smoke)) +
geom_histogram(position = "stacked", alpha = 0.4)
ggplot(birthwt_mod, aes(x = bwt, fill = smoke)) +
geom_histogram(position = "stack", alpha = 0.4)
ggplot(birthwt_mod, aes(x = bwt, fill = smoke)) +
geom_histogram(position = "dodge", alpha = 0.4)
ggplot(birthwt_mod, aes(x = bwt, fill = smoke)) +
geom_histogram(bins = 15, position = "dodge", alpha = 0.4)
